{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "IpRateLimiting": {
    "EnableEndpointRateLimiting": false, // false = groups all calls together toward rate limit not just per endpoint
    "StackBlockedRequests": true, // false = rejected calls don't count toward limit; true = rejected calls do count (doesn't seem to function as I'd expect though)
    "RealIpHeader": "X-Real-IP", // Allows using rate limiting even if you're behind a reverse proxy
    "HttpStatusCode": "429", // The error code to give if you get rate limited (429 is the standard throttling status code)
    "IpWhitelist": [ "127.0.0.1" ], // This refers to itself. 127.0.0.1 is different from localhost. Could use this to whitelist internal systems.
    "EndpointWhitelist": [], // If you wanted to remove rate limiting for a specific endpoint then do something like this: ["GET:/api/users"]
    "GeneralRules": [
      {
        "Endpoint": "*", // * means all endpoints
        "Period": "5s", // 5s, 5m
        "Limit": 2 // Period 5s and Limit 2: These are just demo values but in this case it means you can only talk to API 2 times every 5 seconds
      },
      {
        "Endpoint": "*", // * means all endpoints
        "Period": "1m", // 5s, 5m
        "Limit": 1000 // This is just to show how to add more rules even though this can't be hit if 5s/2 is left above. This says limit of 1000 calls within a 1 minute period.
      }
    ]
  }
}
